/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;


import Model.MedicalRecord;
import Service.MedicalRecordService;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.MessageFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Thierry
 */
public class MedicalRecordslist extends javax.swing.JFrame {
    
//     private MedicalRecordDao medicalRecordDao;


    /**
     * Creates new form MedicalRecordslist
     */
    public MedicalRecordslist() {
        initComponents();
  //       medicalRecordDao = new MedicalRecordDao();
    //    populateMedicalRecordsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        exitTxt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        recordTable = new javax.swing.JTable();
        deleteTxt = new javax.swing.JButton();
        DeleteTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        searchTxt = new javax.swing.JTextField();
        ViewAll = new javax.swing.JButton();
        Print = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(709, 580));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Medical Records ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(120, 0, 390, 30);

        exitTxt.setBackground(new java.awt.Color(204, 0, 0));
        exitTxt.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        exitTxt.setText("Exit");
        exitTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitTxtMouseClicked(evt);
            }
        });
        exitTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitTxtActionPerformed(evt);
            }
        });
        getContentPane().add(exitTxt);
        exitTxt.setBounds(0, 450, 60, 20);

        recordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Diagnosis", "Treatment", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        recordTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(recordTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 40, 710, 410);

        deleteTxt.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        deleteTxt.setText("Delete");
        deleteTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteTxtMouseClicked(evt);
            }
        });
        deleteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTxtActionPerformed(evt);
            }
        });
        getContentPane().add(deleteTxt);
        deleteTxt.setBounds(640, 450, 73, 27);
        getContentPane().add(DeleteTxt);
        DeleteTxt.setBounds(560, 450, 70, 30);

        searchBtn.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(searchBtn);
        searchBtn.setBounds(640, 0, 73, 27);
        getContentPane().add(searchTxt);
        searchTxt.setBounds(570, 0, 59, 20);

        ViewAll.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        ViewAll.setText("ViewAll");
        ViewAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewAllActionPerformed(evt);
            }
        });
        getContentPane().add(ViewAll);
        ViewAll.setBounds(0, 0, 110, 30);

        Print.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        Print.setText("Print");
        Print.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });
        getContentPane().add(Print);
        Print.setBounds(300, 450, 90, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseClicked
        // TODO add your handling code here:
         this.setVisible(false);
    
    // Create a new instance of the patient manager window and make it visible
    new MedicalForms().setVisible(true);
    }//GEN-LAST:event_exitTxtMouseClicked

    private void exitTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitTxtActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_exitTxtActionPerformed

    private void deleteTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteTxtMouseClicked
 



    }//GEN-LAST:event_deleteTxtMouseClicked

    private void deleteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTxtActionPerformed
        // TODO add your handling code here:
                                                                                   
    if (DeleteTxt.getText().trim().isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please Enter Record ID");
} else {
    int ch = JOptionPane.showConfirmDialog(null, "Are you sure you want to Delete?", "Delete", JOptionPane.YES_NO_CANCEL_OPTION);
    if (ch == JOptionPane.YES_OPTION) {
        try {
            int recordId = Integer.parseInt(DeleteTxt.getText());
            MedicalRecord theMedicalRecord = new MedicalRecord();
            theMedicalRecord.setRecord_id(recordId);
            
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
            MedicalRecordService service = (MedicalRecordService) registry.lookup("medicalrecord");
            MedicalRecord medObj = service.deleteMedicalRecord(theMedicalRecord);
            
            JOptionPane.showMessageDialog(this, "Medical Record Deleted Successfully");
            DeleteTxt.setText("");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
    }//GEN-LAST:event_deleteTxtActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
       // TODO add your handling code here:
       try{
           //Validation
           if(searchTxt.getText().trim().isEmpty()){
               JOptionPane.showMessageDialog(this, "Enter Record ID");
           }else{
               int Record_id = Integer.parseInt(searchTxt.getText());
               MedicalRecord theMedicalRecord = new MedicalRecord();
               theMedicalRecord.setRecord_id(Record_id);
               Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
               MedicalRecordService service = (MedicalRecordService) registry.lookup("medicalrecord");
               MedicalRecord medObj = service.SearchMedicalRecordById(theMedicalRecord);
               DefaultTableModel tb = new DefaultTableModel();
               
               tb.addColumn("Record ID");
               tb.addColumn("Diagnosis");
               tb.addColumn("Treatment");
               tb.addColumn("Date");
               tb.addColumn("Patient ID");
               
               tb.addRow(new Object[]{
                   medObj.getRecord_id(),
                   medObj.getDiagnosis(),
                   medObj.getTreatment(),
                   medObj.getDate(),
                   medObj.getThePatient()
               });
               recordTable.setModel(tb);
             
           }
       
       } catch (RemoteException ex) {
            Logger.getLogger(MedicalRecordslist.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(MedicalRecordslist.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_searchBtnActionPerformed

    private void ViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewAllActionPerformed
        // TODO add your handling code here:
        try{
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
            MedicalRecordService service = (MedicalRecordService)registry.lookup("medicalrecord");
            List<MedicalRecord> medicalrecords =service.findAll();
            DefaultTableModel tb = new DefaultTableModel();

            tb.addColumn("Record ID");
            tb.addColumn("Date");
            tb.addColumn("Diagnosis");
            tb.addColumn("Treatment");
            tb.addColumn("Patient ID");
            for(MedicalRecord theMedicalRecord:medicalrecords){
                tb.addRow(new Object[]{
                    theMedicalRecord.getRecord_id(),
                    theMedicalRecord.getDate(),
                    theMedicalRecord.getDiagnosis(),
                    theMedicalRecord.getTreatment(),
//                    theMedicalRecord.getPatient()
                });
}
            recordTable.setModel(tb);

        }catch(Exception e){
            e.printStackTrace();
}
    }//GEN-LAST:event_ViewAllActionPerformed

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed

         MessageFormat header = new MessageFormat("Medical Records");
        MessageFormat footer = new MessageFormat("Footer");
        try{
            PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
            set.add(OrientationRequested.PORTRAIT);
            recordTable.print(JTable.PrintMode.FIT_WIDTH,header,footer,true,set,true);
            recordTable.print();
        }catch(Exception e){
            e.printStackTrace();
        }

    }//GEN-LAST:event_PrintActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedicalRecordslist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedicalRecordslist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedicalRecordslist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedicalRecordslist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedicalRecordslist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DeleteTxt;
    private javax.swing.JButton Print;
    private javax.swing.JButton ViewAll;
    private javax.swing.JButton deleteTxt;
    private javax.swing.JButton exitTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable recordTable;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTxt;
    // End of variables declaration//GEN-END:variables

  //  private void populateMedicalRecordsTable() {
    //    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    //}
}
