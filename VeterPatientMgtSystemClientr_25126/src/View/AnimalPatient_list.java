/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Model.Patient;
import Service.PatientService;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.MessageFormat;
import java.util.List;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.xml.soap.MessageFactory;



/**
 *
 * @author Thierry
 */
public class AnimalPatient_list extends javax.swing.JFrame {
    /**
     * Creates new form AnimalPatient_list
     */
    public AnimalPatient_list() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        animalTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        deteleTxt = new javax.swing.JTextField();
        Print = new javax.swing.JButton();
        searchIdTxt1 = new javax.swing.JButton();
        ViewAll = new javax.swing.JButton();
        DeleteTxt = new javax.swing.JButton();
        searchTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(652, 475));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);
        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 0, 410);

        animalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Breed", "Age", "Owner"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(animalTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 180, 620, 210);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Animal Patient List");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 590, 30);

        exit.setBackground(new java.awt.Color(204, 51, 0));
        exit.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        exit.setText("Exit");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        getContentPane().add(exit);
        exit.setBounds(540, 10, 90, 30);
        getContentPane().add(deteleTxt);
        deteleTxt.setBounds(340, 140, 140, 30);

        Print.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        Print.setText("Print");
        Print.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });
        getContentPane().add(Print);
        Print.setBounds(540, 400, 90, 30);

        searchIdTxt1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        searchIdTxt1.setText("Search ID");
        searchIdTxt1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchIdTxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIdTxt1ActionPerformed(evt);
            }
        });
        getContentPane().add(searchIdTxt1);
        searchIdTxt1.setBounds(540, 77, 90, 30);

        ViewAll.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        ViewAll.setText("ViewAll");
        ViewAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewAllActionPerformed(evt);
            }
        });
        getContentPane().add(ViewAll);
        ViewAll.setBounds(10, 80, 110, 30);

        DeleteTxt.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        DeleteTxt.setText("Delete");
        DeleteTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeleteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteTxtActionPerformed(evt);
            }
        });
        getContentPane().add(DeleteTxt);
        DeleteTxt.setBounds(540, 140, 90, 30);
        getContentPane().add(searchTxt);
        searchTxt.setBounds(340, 80, 140, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitActionPerformed

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
         this.setVisible(false);
    
    // Create a new instance of the patient manager window and make it visible
    new PatientManagement().setVisible(true);
    }//GEN-LAST:event_exitMouseClicked

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed

        MessageFormat header = new MessageFormat("AnimalPatient_List");
        MessageFormat footer = new MessageFormat("Footer");
        try{
            PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
            set.add(OrientationRequested.PORTRAIT);
            animalTable.print(JTable.PrintMode.FIT_WIDTH,header,footer,true,set,true);
            animalTable.print();
        }catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_PrintActionPerformed

    private void searchIdTxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchIdTxt1ActionPerformed
        // TODO add your handling code here:
        try{
            //validation
            if(searchTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Enter Patient ID");
            }else{
                int patientId = Integer.parseInt(searchTxt.getText());
                Patient thePatient = new Patient();
                thePatient.setPatientId(patientId);
                Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
                PatientService service = (PatientService)registry.lookup("patient");
                Patient patObj = service.SearchPatientById(thePatient);
                DefaultTableModel tb = new DefaultTableModel();
                
                tb.addColumn("ID");
                tb.addColumn("NAME");
                tb.addColumn("BREED");
                tb.addColumn("AGE");
                tb.addColumn("OWNER");
                
                tb.addRow(new Object[]{
                    patObj.getPatientId(),
                    patObj.getPatientName(),
                    patObj.getPatientBreed(),
                    patObj.getPatientAge(),
                    patObj.getPatientOwner()
                });
                animalTable.setModel(tb);
           }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchIdTxt1ActionPerformed

    private void ViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewAllActionPerformed
        // TODO add your handling code here:
        try{
                Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
                PatientService service = (PatientService)registry.lookup("patient");
                List<Patient> patients =service.findAll();
                DefaultTableModel tb = new DefaultTableModel();
                
                tb.addColumn("ID");
                tb.addColumn("NAME");
                tb.addColumn("BREED");
                tb.addColumn("AGE");
                tb.addColumn("OWNER");
                for(Patient thePatient:patients){
                tb.addRow(new Object[]{
                    thePatient.getPatientId(),
                    thePatient.getPatientName(),
                    thePatient.getPatientBreed(),
                    thePatient.getPatientAge(),
                    thePatient.getPatientOwner()
                });
                }
                animalTable.setModel(tb);
         
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_ViewAllActionPerformed

    private void DeleteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteTxtActionPerformed

       if(DeleteTxt.getText().trim().isEmpty()){
           JOptionPane.showMessageDialog(this, "Please Enter Patient ID");
       }else{
           int ch = JOptionPane.showConfirmDialog(null, "Are you sure you want to Delete?","Delete",JOptionPane.YES_NO_CANCEL_OPTION);
        if(ch == JOptionPane.YES_OPTION){
            try{
               int patientId = Integer.parseInt(deteleTxt.getText());
                Patient thePatient = new Patient();
                thePatient.setPatientId(patientId);
                Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
                PatientService service = (PatientService)registry.lookup("patient");
                Patient patObj = service.deletePatient(thePatient);
                JOptionPane.showMessageDialog(this, "Data Deleted Successfully");
           }catch(Exception e){
               e.printStackTrace();
           }
       }
       }
           
    }//GEN-LAST:event_DeleteTxtActionPerformed


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnimalPatient_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnimalPatient_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnimalPatient_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnimalPatient_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnimalPatient_list().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteTxt;
    private javax.swing.JButton Print;
    private javax.swing.JButton ViewAll;
    private javax.swing.JTable animalTable;
    private javax.swing.JTextField deteleTxt;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchIdTxt1;
    private javax.swing.JTextField searchTxt;
    // End of variables declaration//GEN-END:variables

}
